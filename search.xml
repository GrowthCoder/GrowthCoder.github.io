<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Yeoman量身定制前端脚手架]]></title>
      <url>/2018/01/28/Yeoman%E9%87%8F%E8%BA%AB%E5%AE%9A%E5%88%B6%E5%89%8D%E7%AB%AF%E8%84%9A%E6%89%8B%E6%9E%B6-md/</url>
      <content type="html"><![CDATA[<h2 id="Yeoman是什么？"><a href="#Yeoman是什么？" class="headerlink" title="Yeoman是什么？"></a>Yeoman是什么？</h2><p><strong>++Yeoman为何方神圣，说他有三头六臂一点都不夸张。++</strong></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2658726-d9f706a2c367f6f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="d5978593e4269f636f250dcdd8503590.png"></p>
<p>因为他<strong>由三部分组成</strong>：yo(脚手架工具)、grunt(等构建工具)、npm(等包管理器)。</p>
<p>官方文档中给他的定位为<strong>scaffolding tool</strong>，其实就是脚手架工具，可以帮助前端开发人员量身定制化自己的脚手架，省去copy环节。</p>
<p>使用 <strong>yeoman generator</strong>可以帮助我们<em>构建项目结构、安装依赖等</em>重复性操作，然而已有的generator有时并不能满足需求，所以可以使用yeoman的<a href="http://yeoman.io/generator/" target="_blank" rel="external">API</a>来构建自己的生成器。</p>
<p>通过定制好自己的generator之后，只需要几个命令，就可以使用自己的脚手架，并且自动化生成项目文件结构、配置文件、依赖包等。</p>
<p>接下来开始敲黑板、划重点了！！！</p>
<h3 id="配置开发环境"><a href="#配置开发环境" class="headerlink" title="配置开发环境"></a>配置开发环境</h3><p>需要安装node.js</p>
<p>安装Yeoman的<strong>命令行工具</strong>和开发<strong>Yeoman生成器</strong>的工具 generator-generator</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install -g yo</div><div class="line">npm install -g generator-generator</div></pre></td></tr></table></figure>
<h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yo generator</div></pre></td></tr></table></figure>
<p>执行上述命令，执行前，不需要新建文件夹，yo generator会帮我们建好文件夹。Yeoman会在终端提出几个问题，这是一个交互式的配置过程。项目名自己设置，必须以generator-开头，协议选择MIT，协议完成后，Yeoman会自动安装项目依赖。当然可以终止掉自动安装，自己使用cnpm或者yarn进行安装，用了都说好。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/2658726-29ecd6e8b6b3750f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="yeoman.png"></p>
<p>最后生成的项目目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">generator-vue-test</div><div class="line">├ generators</div><div class="line">    ├ app</div><div class="line">        ├ index.js</div><div class="line">        ├ templates</div><div class="line">            ├ dummyfile.txt</div><div class="line">├ __tests__</div><div class="line">    ├ app.js</div><div class="line">├ LICENSE</div><div class="line">├ README.md</div><div class="line">├ package.json</div></pre></td></tr></table></figure></p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>/generators/app/index.js 是Yeoman的配置文件，生成器入口文件，在这里进行我们自己脚手架的配置</p>
<p>generators/app/templates/是默认存放文件的目录，所有模板文件都放在这个目录下，最后生成的脚手架也只有这个文件夹下的内容。</p>
<h4 id="prompting-接受用户输入阶段"><a href="#prompting-接受用户输入阶段" class="headerlink" title="prompting 接受用户输入阶段"></a>prompting 接受用户输入阶段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">module.exports = class extends Generator &#123;</div><div class="line">  prompting() &#123;</div><div class="line">    // Have Yeoman greet the user.</div><div class="line">    this.log(yosay(</div><div class="line">      &apos;Welcome to the awe-inspiring &apos; + chalk.red(&apos;generator-downloads&apos;) + &apos; generator!&apos;</div><div class="line">    ));</div><div class="line">    const prompts = [&#123;</div><div class="line">      type: &apos;confirm&apos;,</div><div class="line">      name: &apos;someAnswer&apos;,</div><div class="line">      message: &apos;Would you like to enable this option?&apos;,</div><div class="line">      default: true</div><div class="line">    &#125;];</div><div class="line">    return this.prompt(prompts).then(props =&gt; &#123;</div><div class="line">      // To access props later use this.props.someAnswer;</div><div class="line">      this.props = props;</div><div class="line">    &#125;);</div><div class="line">  &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>封装了 inquirer，在终端提供一个交互式的配置过程。可以根据提供的<a href="http://yeoman.io/generator/" target="_blank" rel="external">API</a>，进行适当的修改，实现通用的脚手架。</p>
<ul>
<li>this.appname: 获取当前文件夹名称</li>
<li>this.user.git.name(): 获取全局git用户名</li>
<li>this.user.git.email(): 获取全局git邮箱</li>
<li>this.github.username(): 获取github用户名</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">const prompts = [&#123;</div><div class="line">    type: &apos;confirm&apos;,</div><div class="line">    name: &apos;someAnswer&apos;,</div><div class="line">    message: &apos;Would you like to enable this option?&apos;,</div><div class="line">    default: true</div><div class="line">&#125;,&#123;</div><div class="line">    type: &apos;input&apos;,</div><div class="line">    name: &apos;name&apos;,</div><div class="line">    message: &apos;Your project name&apos;,</div><div class="line">    default: this.appname</div><div class="line">&#125;,&#123;</div><div class="line">    type: &apos;input&apos;,</div><div class="line">    name: &apos;description&apos;,</div><div class="line">    message: &apos;description&apos;,</div><div class="line">&#125;,&#123;</div><div class="line">    type: &apos;input&apos;,</div><div class="line">    name: &apos;author&apos;,</div><div class="line">    message: &apos;author&apos;,</div><div class="line">    default: this.user.git.name()</div><div class="line">&#125;,&#123;</div><div class="line">    type: &apos;input&apos;,</div><div class="line">    name: &apos;email&apos;,</div><div class="line">    message: &apos;email&apos;,</div><div class="line">    default: this.user.git.email()</div><div class="line">&#125;];</div></pre></td></tr></table></figure>
<p>这里实现了让用户输入作者、项目名、email。</p>
<h4 id="writing-生成项目目录结构阶段"><a href="#writing-生成项目目录结构阶段" class="headerlink" title="writing 生成项目目录结构阶段"></a>writing 生成项目目录结构阶段</h4><p>通过this.fs，可以使用所有文件的方法，只用使用<a href="https://github.com/sboudrias/mem-fs-editor" target="_blank" rel="external">mem-fs editor </a>模块的接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">writing() &#123;</div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;build/&apos;),</div><div class="line">          this.destinationPath(&apos;build/&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;config/&apos;),</div><div class="line">          this.destinationPath(&apos;config/&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;src/&apos;),</div><div class="line">          this.destinationPath(&apos;src/&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;mock/&apos;),</div><div class="line">          this.destinationPath(&apos;mock/&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;static/.gitkeep&apos;),</div><div class="line">          this.destinationPath(&apos;static/.gitkeep&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;.babelrc&apos;),</div><div class="line">          this.destinationPath(&apos;.babelrc&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;.eslintrc.js&apos;),</div><div class="line">          this.destinationPath(&apos;.eslintrc.js&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copyTpl(</div><div class="line">          this.templatePath(&apos;package.json&apos;),</div><div class="line">          this.destinationPath(&apos;package.json&apos;), &#123;</div><div class="line">              title: this.props.name,</div><div class="line">              description: this.props.description,</div><div class="line">              author: this.props.author,</div><div class="line">              email: this.props.email</div><div class="line">          &#125;</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;README.md&apos;),</div><div class="line">          this.destinationPath(&apos;README.md&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copy(</div><div class="line">          this.templatePath(&apos;.gitignore&apos;),</div><div class="line">          this.destinationPath(&apos;.gitignore&apos;)</div><div class="line">      );</div><div class="line"></div><div class="line">      this.fs.copyTpl(</div><div class="line">          this.templatePath(&apos;index.html&apos;),</div><div class="line">          this.destinationPath(&apos;index.html&apos;),</div><div class="line">          &#123; title: this.props.name &#125;</div><div class="line">      );</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<h4 id="copy-vs-copyTpl"><a href="#copy-vs-copyTpl" class="headerlink" title="copy() vs copyTpl()"></a>copy() vs copyTpl()</h4><p>他们的第一个参数都是模板文件路径，第二个参数是生成文件路径，不同之处在于copyTpl的第三个参数是一个对象，用于向模板中填充数据。copyTpl使用的是ejs模板引擎。</p>
<p>例如：./templates/index.html的文件内容是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">  &lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;&lt;%= title %&gt;&lt;/title&gt;</div><div class="line">  &lt;/head&gt;</div><div class="line">  &lt;body&gt;</div><div class="line">    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;!-- built files will be auto injected --&gt;</div><div class="line">  &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">this.fs.copyTpl(</div><div class="line">    this.templatePath(&apos;index.html&apos;),</div><div class="line">    this.destinationPath(&apos;index.html&apos;),</div><div class="line">    &#123;title: &apos;Templating with Yeoman&apos;&#125;</div><div class="line">);</div></pre></td></tr></table></figure>
<p>一但generator运行成功，index.html将会编译为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">  &lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class="line">    &lt;title&gt;Templating with Yeoman&lt;/title&gt;</div><div class="line">  &lt;/head&gt;</div><div class="line">  &lt;body&gt;</div><div class="line">    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;!-- built files will be auto injected --&gt;</div><div class="line">  &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>json也同样适用上面的语法，配置package.json文件可以适应不同的项目。</p>
<h4 id="install-安装依赖"><a href="#install-安装依赖" class="headerlink" title="install 安装依赖"></a>install 安装依赖</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 3. 安装依赖</div><div class="line">install: function ()&#123;</div><div class="line">    this.npmInstall();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="安装测试"><a href="#安装测试" class="headerlink" title="安装测试"></a>安装测试</h3><p>如果你想观察自己配置的结果，可以使用<strong>npm link</strong> 命令，相当于全局安装了此脚手架，然后通过新建文件夹，且进入文件夹，<strong>运行yo</strong>，选择刚刚的脚手架，便可以测试。<br>例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir vue-test &amp;&amp; cd vue-test</div></pre></td></tr></table></figure>
<h3 id="发布generator"><a href="#发布generator" class="headerlink" title="发布generator"></a>发布generator</h3><p>可以将你创建的生成器发布到npm社区，便于自己和其他开发者使用。</p>
<p>generator-test/package.json中的name要在<a href="https://www.npmjs.com/没被创建过，才可以发布。" target="_blank" rel="external">https://www.npmjs.com/没被创建过，才可以发布。</a></p>
<p>如果没有npm的账号，可以通过npm adduser创建；<br>如果已有账号，通过 npm login 登陆。</p>
<p>登陆成功之后，在项目的根目录下，运行npm publish就可以发布了。如果更新后重新发布，需要修改package.json文件的版本号。</p>
<p>使用下述命令可以撤销发布，只有在发布包24小时内允许撤销发布的包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm unpublish 包名</div></pre></td></tr></table></figure></p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>Yeoman官网：<a href="http://yeoman.io/" target="_blank" rel="external">http://yeoman.io/</a></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2658726-6c440e5aa821e544.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="微信图片_20170817160210.jpg"></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu下安装mysql]]></title>
      <url>/2017/12/20/ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85mysql/</url>
      <content type="html"><![CDATA[<h4 id="安装mysql前配置"><a href="#安装mysql前配置" class="headerlink" title="安装mysql前配置"></a>安装mysql前配置</h4><ul>
<li><p>新买的服务器，端口都没有对外开放，需要对服务器安全组进行配置。</p>
</li>
<li><p>可以添加安全组规则，允许或者禁止安全组内的ECS实例对公网、内网的访问</p>
</li>
<li>VPC 网络：只需要设置出方向和入方向的规则，不区分私网和公网。</li>
<li>最后安全组如下：<br><img src="http://upload-images.jianshu.io/upload_images/2658726-83313bde30090e76.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><ul>
<li>22 用于SSH远程连接到Linux实例</li>
<li>3306 实例作为 MySQL 服务器</li>
<li>80 实例作为网站或 Web 应用的服务器<a id="more"></a>
<h4 id="mysql安装"><a href="#mysql安装" class="headerlink" title="mysql安装"></a>mysql安装</h4></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install mysql-server</div></pre></td></tr></table></figure>
<p>安装过程会弹出提示框，输入root用户的密码，我在这里设置密码为root</p>
<p>安装完成后，MySQL服务器会自动启动，我们检查MySQL服务器程序。</p>
<h4 id="mysql检查"><a href="#mysql检查" class="headerlink" title="mysql检查"></a>mysql检查</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># 检查MySQL服务器系统进程</div><div class="line">-aux|grep mysql</div><div class="line">mysql     3205  2.0  0.5 549896 44092 ?        Ssl  20:10   0:00 /usr/sbin/mysqld</div><div class="line">conan     3360  0.0  0.0  11064   928 pts/0    S+   20:10   0:00 grep --color=auto mysql</div><div class="line"></div><div class="line"># 检查MySQL服务器占用端口</div><div class="line">netstat -nlt|grep 3306</div><div class="line">tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN</div><div class="line"></div><div class="line"># 通过启动命令检查MySQL服务器状态</div><div class="line">sudo /etc/init.d/mysql status</div><div class="line"># 通过系统服务命令检查MySQL服务器状态</div><div class="line">service mysql status</div></pre></td></tr></table></figure>
<h4 id="通过命令行客户端访问MySQL"><a href="#通过命令行客户端访问MySQL" class="headerlink" title="通过命令行客户端访问MySQL"></a>通过命令行客户端访问MySQL</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p //password: root</div></pre></td></tr></table></figure>
<h4 id="修改MySQL服务器的配置"><a href="#修改MySQL服务器的配置" class="headerlink" title="修改MySQL服务器的配置"></a>修改MySQL服务器的配置</h4><h5 id="将字符编码设置为UTF-8"><a href="#将字符编码设置为UTF-8" class="headerlink" title="将字符编码设置为UTF-8"></a>将字符编码设置为UTF-8</h5><p>默认情况下，MySQL的字符集是latin1，因此在存储中文的时候，会出现乱码的情况，所以我们需要把字符集统一改成UTF-8。</p>
<p>用vi打开MySQL服务器的配置文件my.cnf</p>
<h5 id="让MySQL服务器被远程访问"><a href="#让MySQL服务器被远程访问" class="headerlink" title="让MySQL服务器被远程访问"></a>让MySQL服务器被远程访问</h5><p>默认情况下，MySQL服务器不允许远程访问，只允许本机访问，所以我们需要设置打开远程访问的功能。</p>
<p>用vi打开MySQL服务器的配置文件my.cnf</p>
<p>当我们修改完mysql权限相关的操作后一定要刷新权限表，使配置生效,执行<br><code>flush privileges;</code></p>
<p>第一种：是直接将原来的 <code>user=&#39;root&#39; and host=&#39;localhost&#39;</code> 记录的host修改成%或指定的ip<br>1) 将host设置为%表示任何ip都能连接mysql<br><code>update user set host=&#39;%&#39; where user=&#39;root&#39; and host=&#39;localhost&#39;;</code><br>2)  当然也可以将host指定为某个ip<br><code>update user set host=&#39;106.39.178.131&#39; where user=&#39;root&#39; and host=&#39;localhost&#39;;</code><br>3) 执行完以上语句,接着执行以下语句 ,刷新权限表,使配置生效<br><code>flush privileges</code></p>
<h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><p><a href="http://www.jb51.net/article/121173.htm" target="_blank" rel="external">mysql配置客户端访问</a></p>
<p><a href="http://blog.fens.me/linux-mysql-install/" target="_blank" rel="external">mysql安装</a></p>
]]></content>
      
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS实现排序算法]]></title>
      <url>/2017/07/05/JS%E5%AE%9E%E7%8E%B0%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>总结下用js实现排序的几种普遍方法：</p>
<h4 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1. 冒泡排序"></a>1. 冒泡排序</h4><h6 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h6><p>依次比较相邻的两个元素，如果后一个小于前一个，则交换，这样从头到尾一次，就将最大的放到了末尾。</p>
<h6 id="平均时间复杂度：O-n-2-。"><a href="#平均时间复杂度：O-n-2-。" class="headerlink" title="平均时间复杂度：O(n^2)。"></a>平均时间复杂度：O(n^2)。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">function bubbleSort(arr) &#123;</div><div class="line">    var temp;</div><div class="line">    if(arr.length == 0 || arr == null) &#123;</div><div class="line">        return arr;</div><div class="line">    &#125;</div><div class="line">// [1, 545, 55, 33, 23, 21, 3]</div><div class="line">    for(var i = 0; i &lt; arr.length - 1; i++ ) &#123;</div><div class="line">        for(j = 0; j &lt; arr.length - i - 1; j++) &#123;</div><div class="line">            if(arr[j] &gt; arr[j+1]) &#123;</div><div class="line">                temp = arr[j];</div><div class="line">                arr[j] = arr[j+1];</div><div class="line">                arr[j+1] = temp;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return arr;</div><div class="line">&#125;</div><div class="line">//bubbleSort([1,34,23,34543,12,544,2])</div><div class="line">//[1, 2, 12, 23, 34, 544, 34543]</div></pre></td></tr></table></figure>
<a id="more"></a>
<h5 id="2-选择排序"><a href="#2-选择排序" class="headerlink" title="2. 选择排序"></a>2. 选择排序</h5><h6 id="原理：-1"><a href="#原理：-1" class="headerlink" title="原理："></a>原理：</h6><p>每次找一个最大或者最小的数排在最开始，让其他数与之比较，进而选择是否交换位置。</p>
<h6 id="平均时间复杂度：O-n-2-。-1"><a href="#平均时间复杂度：O-n-2-。-1" class="headerlink" title="平均时间复杂度：O(n^2)。"></a>平均时间复杂度：O(n^2)。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">function selectSort (arr) &#123;</div><div class="line">  var length = arr.length,</div><div class="line">      i,</div><div class="line">      j,</div><div class="line">      k,</div><div class="line">      temp;</div><div class="line"></div><div class="line">  if( length === 0 || arr === null ) &#123;</div><div class="line">        return arr;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  for(i = 0; i &lt; length - 1; i++) &#123;</div><div class="line">    k = i; //标记最小数</div><div class="line">    for(j = i + 1; j &lt; length; j++) &#123;</div><div class="line">      if(arr[k] &gt; arr[j]) &#123;</div><div class="line">        k = j;</div><div class="line">      &#125;</div><div class="line">      temp = arr[k];</div><div class="line">      arr[k] = arr[i];</div><div class="line">      arr[i] = temp;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  return arr;</div><div class="line">&#125;</div><div class="line">//selectSort([1,43,2,324,23,534,2])</div><div class="line">//[1, 2, 2, 23, 43, 324, 534]</div></pre></td></tr></table></figure>
<h5 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3. 插入排序"></a>3. 插入排序</h5><h6 id="原理：-2"><a href="#原理：-2" class="headerlink" title="原理："></a>原理：</h6><p>将元素插入到有序序列中，一般将第一个元素视为有序序列，插入元素视为待排序列，与第一个元素进行比较插入。</p>
<h6 id="平均时间复杂度：O-n-2-。-2"><a href="#平均时间复杂度：O-n-2-。-2" class="headerlink" title="平均时间复杂度：O(n^2)。"></a>平均时间复杂度：O(n^2)。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">function insertionSort (arr) &#123;</div><div class="line">    var length = arr.length,</div><div class="line">      i,</div><div class="line">      j,</div><div class="line">      k,</div><div class="line">      preIndex, //当前元素的前一个元素的下标</div><div class="line">      current; //当前待排元素</div><div class="line"></div><div class="line">  if( length === 0 || arr === null ) &#123;</div><div class="line">        return;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  for(i = 1; i &lt; length; i++) &#123;</div><div class="line">    preIndex = i - 1;</div><div class="line">    current = arr[i];</div><div class="line">    while(preIndex &gt;= 0 &amp;&amp; current &lt; arr[preIndex]) &#123;</div><div class="line">      arr[preIndex+1] = arr[preIndex]; // 比current大的元素后移</div><div class="line">      preIndex--;</div><div class="line">    &#125;</div><div class="line">    arr[preIndex+1] = current;//将current插入到数组中</div><div class="line">  &#125;</div><div class="line">  return arr;</div><div class="line">&#125;</div><div class="line">//insertionSort([23,34,2,43,3423,23,1123,3])</div><div class="line">//[2, 3, 23, 23, 34, 43, 1123, 3423]</div></pre></td></tr></table></figure>
<h5 id="4-快速排序"><a href="#4-快速排序" class="headerlink" title="4. 快速排序"></a>4. 快速排序</h5><h6 id="原理：-3"><a href="#原理：-3" class="headerlink" title="原理："></a>原理：</h6><p>选择一个基准，将比基准小的，放在基准左边，将比基准大的，放在基准右边；一般选择中间的作为基准，之后两边再用递归的方法不断重复上述过程。</p>
<h6 id="平均时间复杂度：O-nlog-n-。"><a href="#平均时间复杂度：O-nlog-n-。" class="headerlink" title="平均时间复杂度：O(nlog(n))。"></a>平均时间复杂度：O(nlog(n))。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">function quickSort (arr) &#123;</div><div class="line">  if( arr.length &lt;= 1 ) &#123;</div><div class="line">        return arr;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  var left = [],</div><div class="line">      right = [],</div><div class="line">      i,</div><div class="line">      j,</div><div class="line">      k,</div><div class="line">      pivotIndex, // 参考点下标</div><div class="line">      pivot; //参考点</div><div class="line"></div><div class="line">  pivotIndex = Math.floor(arr.length / 2);</div><div class="line">  pivot = arr.splice(pivotIndex, 1)[0];//截取参考点</div><div class="line"></div><div class="line">  for(i = 0; i &lt; arr.length; i++) &#123;</div><div class="line">    if(arr[i] &lt; pivot) &#123;</div><div class="line">      left.push(arr[i]);</div><div class="line">    &#125;else &#123;</div><div class="line">      right.push(arr[i]);</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  return quickSort(left).concat([pivot], quickSort(right)); //递归进行上述规则排序 最后返回数组</div><div class="line">&#125;</div><div class="line">//quickSort([12,3,2,434,21,32,23,11])</div><div class="line">//[2, 3, 11, 12, 21, 23, 32, 434]</div></pre></td></tr></table></figure>
<p><em>未完待续</em></p>
]]></content>
      
        
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[打开APP、扫码下载、唤醒本地APP方案总结]]></title>
      <url>/2017/07/05/%E6%B4%BB%E5%8A%A8%E9%A1%B5%E4%B8%AD%E6%89%93%E5%BC%80APP%E3%80%81%E6%89%AB%E7%A0%81%E4%B8%8B%E8%BD%BDAPP%E6%96%B9%E6%A1%88%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>最近做活动，需要用到在H5中打开/下载APP，PC端扫码下载APP相关业务，看似很小的一个功能，却蕴藏很大玄机。主要的难点在于在<strong>微信中唤醒APP</strong>，参考了很多产品的实现方式，对唱吧、今日头条等这几个平台颇为满意。最终我们团队，也实现了想要的功能。</p>
<h5 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h5><p>①Android端  微信中，依托应用宝实现打开、下载逻辑；<br>    浏览器中，本地没有APP，跳到指定下载页，有APP可以唤醒APP并打开指定活动页。<br>②IOS端 微信中，本地没有APP，依托应用宝进行下载，本地有APP，则可以在微信中唤醒APP，并且在APP中打开该活动页。<br>浏览器中，本地没有APP，跳iTunes下载，有APP，唤醒。<br><img src="http://upload-images.jianshu.io/upload_images/2658726-0ce0454a64231bf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><a id="more"></a></p>
<h3 id="一、方案流程"><a href="#一、方案流程" class="headerlink" title="一、方案流程"></a>一、方案流程</h3><p><img src="http://upload-images.jianshu.io/upload_images/2658726-28e51cf93152a907.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<table>
<thead>
<tr>
<th style="text-align:center">端</th>
<th style="text-align:center">难度</th>
<th style="text-align:center">使用技术</th>
<th style="text-align:center">能否跳转到指定页面</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Android/微信</td>
<td style="text-align:center">简单</td>
<td style="text-align:center">应用宝链接</td>
<td style="text-align:center">否</td>
</tr>
<tr>
<td style="text-align:center">Android/浏览器</td>
<td style="text-align:center">简单</td>
<td style="text-align:center">Schema</td>
<td style="text-align:center">是</td>
</tr>
<tr>
<td style="text-align:center">Ios/微信</td>
<td style="text-align:center">复杂</td>
<td style="text-align:center">Universal Links</td>
<td style="text-align:center">是</td>
</tr>
<tr>
<td style="text-align:center">Ios/浏览器</td>
<td style="text-align:center">复杂</td>
<td style="text-align:center">Universal Links</td>
<td style="text-align:center">是</td>
</tr>
</tbody>
</table>
<h3 id="二、针对以上方案ios端的配置工作："><a href="#二、针对以上方案ios端的配置工作：" class="headerlink" title="二、针对以上方案ios端的配置工作："></a>二、针对以上方案ios端的配置工作：</h3><p>1、需要一台https服务器，且在微信端进行过安全认证，否则在安卓微信端容易导致页面跳转失败!!!目前使用的shui5的服务器在微信端没经过认证，所以实现逻辑不太一样</p>
<p>①apple-app-site-association文件<br>注意这个文件必须没有后缀名,文件名必须为apple-app-site-association!!!，请放置在https服务器的根目录，eg:(<a href="https://171edu.com/apple-app-site-association" target="_blank" rel="external">https://171edu.com/apple-app-site-association</a>);<br>②将download.html页面也放在之前的https服务器下 eg:(<a href="https://171edu.com/download.html" target="_blank" rel="external">https://171edu.com/download.html</a>)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;applinks&quot;: &#123;</div><div class="line">        &quot;apps&quot;: [],</div><div class="line">        &quot;details&quot;: [</div><div class="line">            &#123;</div><div class="line">                &quot;appID&quot;: &quot;add your id&quot;,</div><div class="line">                &quot;paths&quot;: [ &quot;*&quot; ]</div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                &quot;appID&quot;: &quot;add your id&quot;,</div><div class="line">                &quot;paths&quot;: [ &quot;*&quot; ]</div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>③之前的服务器(<a href="https://171edu.com" target="_blank" rel="external">https://171edu.com</a>) 要在ios的app中进行备案，<strong>当app拦截到这个domain时，会查看本地是否有app，如果有打开，并根据url后面的传参，打开相应的活动页面</strong>，如果本地没有app，则跳转至download页面，进行逻辑判断。</p>
<p>2、打开app在ios端的实现逻辑<br>iOS/微信<br>界面流程: 1. 扫描打开H5页面-&gt;点击打开应用按钮-&gt;打开一张不同域的网页，如存在则打开App/如不存在则打开App Store<br>实现流程: 1. 点击按钮 - &gt;判断为微信/ios -&gt;重定向到不同域的网页</p>
<p>iOS/浏览器<br>界面流程: 1. 打开H5页面-&gt;点击打开应用按钮-&gt;打开一张不同域的网页，如存在则打开App/如不存在则打开App Store<br>实现流程: 1. 点击按钮 - &gt;判断为微信/ios -&gt;重定向到不同域的网页</p>
<p>Itunes下载地址：<a href="https://itunes.apple.com/cn/app/id1127148565" target="_blank" rel="external">https://itunes.apple.com/cn/app/id1127148565</a></p>
<h3 id="三、Android实现"><a href="#三、Android实现" class="headerlink" title="三、Android实现"></a>三、Android实现</h3><p>Android/微信<br>界面流程：1.打开H5页面-&gt;点击打开应用按钮-&gt;载入应用宝链接(移动团队提供)-&gt;逻辑交由应用宝管理<br>实现流程:  1.点击按钮-&gt;判断是微信端/android-&gt;重定向当前页面至应用宝页面(移动团队提供)</p>
<p>Android/浏览器<br>界面流程: 1. 打开浏览器输入地址(或微信浏览器中以外部浏览器打开)-&gt;点击打开应用按钮-&gt;如已存在则打开程序/未存在开始下载<br>实现流程: 1. 点击按钮 -&gt;判断是否浏览器端/android -&gt;重定向android规定Schema字符串-&gt;同时定时器重定向到android下载路径</p>
<ol>
<li>应用宝地址:<br><a href="http://a.app.qq.com/o/simple.jsp?pkgname=com.winwin.tax" target="_blank" rel="external">http://a.app.qq.com/o/simple.jsp?pkgname=com.winwin.tax</a></li>
<li>Schema规则:<br>winwin://?type=activity&amp;url=<br><a href="http://promotion.171edu.com/swpx/index.html" target="_blank" rel="external">http://promotion.171edu.com/swpx/index.html</a></li>
</ol>
<h3 id="四、相关页面代码"><a href="#四、相关页面代码" class="headerlink" title="四、相关页面代码"></a>四、相关页面代码</h3><p><em>//①download.html</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">window.onload = function() &#123;</div><div class="line"> var env = &#123;</div><div class="line"> agent: window.navigator.userAgent.toLowerCase(),</div><div class="line"> downURL: &apos;http://appdownload.17win.com/&apos;,</div><div class="line"> activityURL: &apos;winwin://?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html?edu&apos;,</div><div class="line"> yybaoURL: &apos;http://a.app.qq.com/o/simple.jsp?pkgname=com.winwin.tax&apos;,</div><div class="line"> iosURL: &apos;https://itunes.apple.com/cn/app/id1127148565&apos;,</div><div class="line"> eduURL: &apos;https://shui5.servyou.com.cn/download.html?utm_campaign=xueyuan&amp;utm_medium=app&amp;utm_source=ewm&apos;,（app的新版本此处链接改为https://171edu.com/...）</div><div class="line"></div><div class="line"> isWechat: function () &#123;</div><div class="line">     return this.agent.match(/MicroMessenger/i) == &apos;micromessenger&apos;;</div><div class="line"> &#125;,</div><div class="line"> isAndroid: function () &#123;</div><div class="line">     return this.agent.match(/android/i) == &apos;android&apos;;</div><div class="line"> &#125;,</div><div class="line"> isIphone: function () &#123;</div><div class="line">     return this.agent.match(/iphone/i) == &apos;iphone&apos;;</div><div class="line"> &#125;,</div><div class="line"> init: function () &#123;</div><div class="line">     if (env.isWechat()) &#123;</div><div class="line">    //微信端都跳转到应用宝</div><div class="line">     window.location.href = env.yybaoURL;</div><div class="line">     &#125; else &#123;</div><div class="line">       if (env.isAndroid()) &#123;</div><div class="line">         // 非微信安卓端实现思路</div><div class="line">         //首先唤醒本地app,如果本地有app，打开app,清除定时器，</div><div class="line">         //如果不存在app,则跳转到apk下载页面，下载app</div><div class="line">         timer = setTimeout(function () &#123;</div><div class="line">         window.location.href = env.downURL;</div><div class="line">         &#125;, 800);</div><div class="line">         window.location.href = env.activityURL;</div><div class="line">         window.onpagehide = function () &#123;</div><div class="line">         clearTimeout(timer);</div><div class="line">         &#125;</div><div class="line">         &#125; else &#123;</div><div class="line">         window.location.href = env.iosURL;</div><div class="line">         &#125;</div><div class="line">       &#125;</div><div class="line">     &#125;</div><div class="line">   &#125;;</div><div class="line">   env.init();</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p><em>//②app.html</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line"> var env = &#123;</div><div class="line"> agent: window.navigator.userAgent.toLowerCase(),</div><div class="line"> downURL: &apos;http://appdownload.17win.com/&apos;,</div><div class="line"> activityURL: &apos;winwin://?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html?edu&apos;,</div><div class="line"> yybaoURL: &apos;http://a.app.qq.com/o/simple.jsp?pkgname=com.winwin.tax&apos;,</div><div class="line"> // eduURL: &apos;https://171edu.com/download.html&apos;,</div><div class="line"> eduURL: &apos;https://shui5.servyou.com.cn/download.html?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html&amp;utm_campaign=xueyuan&amp;utm_medium=app&amp;utm_source=ewm&apos;,</div><div class="line"> iosActivityURL: &apos;https://shui5.servyou.com.cn/download.html?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html&apos;,</div><div class="line"></div><div class="line"> isWechat: function()&#123;</div><div class="line">     return this.agent.match(/MicroMessenger/i) == &apos;micromessenger&apos;;</div><div class="line"> &#125;,</div><div class="line"> isAndroid: function()&#123;</div><div class="line">     return this.agent.match(/android/i) == &apos;android&apos;;</div><div class="line"> &#125;,</div><div class="line"> isIphone: function()&#123;</div><div class="line">     return this.agent.match(/iphone/i) == &apos;iphone&apos;;</div><div class="line">   &#125;</div><div class="line"> &#125;;</div><div class="line"> window.onload = function() &#123;</div><div class="line">     var btn = document.getElementById(&apos;btn&apos;);</div><div class="line">     btn.click();</div><div class="line"> &#125;;</div><div class="line"></div><div class="line"> function goto () &#123;</div><div class="line">     window.location.href = &apos;https://shui5.servyou.com.cn/download.html?utm_campaign=xueyuan&amp;utm_medium=app&amp;utm_source=ewm&apos;;</div><div class="line"> &#125;</div><div class="line">&lt;/script&gt;</div><div class="line">&lt;button style=&quot;opacity: 0;&quot; id=&quot;btn&quot; onclick=goto()&gt;&lt;/button&gt;</div></pre></td></tr></table></figure></p>
<p><em>//③活动页面中打开app相关js</em><br><em>////env.js</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">var env = &#123;</div><div class="line"> agent: window.navigator.userAgent.toLowerCase(),</div><div class="line"> downURL: &apos;http://appdownload.17win.com/&apos;,</div><div class="line"> activityURL: &apos;winwin://?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html?edu&apos;,</div><div class="line"> yybaoURL: &apos;http://a.app.qq.com/o/simple.jsp?pkgname=com.winwin.tax&apos;,</div><div class="line"> eduURL: &apos;https://171edu.com/download.html?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html&amp;utm_campaign=xueyuan&amp;utm_medium=app&amp;utm_source=ewm&apos;,</div><div class="line"> shui5URL: &apos;https://shui5.servyou.com.cn/download.html?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html&amp;utm_campaign=xueyuan&amp;utm_medium=app&amp;utm_source=ewm&apos;,</div><div class="line"> iosActivityURL: &apos;https://shui5.servyou.com.cn/download.html?type=activity&amp;url=http://promotion.171edu.com/swpx/index.html&apos;,</div><div class="line"></div><div class="line"> isWechat: function()&#123;</div><div class="line">     return this.agent.match(/MicroMessenger/i) == &apos;micromessenger&apos;;</div><div class="line"> &#125;,</div><div class="line"> isAndroid: function()&#123;</div><div class="line">     return this.agent.match(/android/i) == &apos;android&apos;;</div><div class="line"> &#125;,</div><div class="line"> isIphone: function()&#123;</div><div class="line">     return this.agent.match(/iphone/i) == &apos;iphone&apos;;</div><div class="line">   &#125;</div><div class="line">&#125;;</div><div class="line">;$(function() &#123;</div><div class="line"> $(&apos;.btn-app&apos;).bind(&apos;click&apos;, function() &#123;</div><div class="line">//现在实现逻辑</div><div class="line"> if(env.isWechat() &amp;&amp; env.isAndroid())&#123;</div><div class="line">     window.location.href = env.yybaoURL;</div><div class="line"> &#125;else &#123;</div><div class="line">     window.location.href = env.shui5URL;</div><div class="line"> &#125;</div><div class="line"> &#125;);</div><div class="line">//以后用171edu服务器，直接用下面的</div><div class="line">//window.location.href = env.eduURL;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="五、扫码下载实现逻辑"><a href="#五、扫码下载实现逻辑" class="headerlink" title="五、扫码下载实现逻辑"></a>五、扫码下载实现逻辑</h3><p>二维码为app.html，该页面主要是模拟触发点击按钮事件，进行跳转到download.html，之后进行下载业务处理</p>
<h6 id="本人的第一篇博客，感谢您阅读到了最后，文中如果有不足之处，还请批评指正。"><a href="#本人的第一篇博客，感谢您阅读到了最后，文中如果有不足之处，还请批评指正。" class="headerlink" title="本人的第一篇博客，感谢您阅读到了最后，文中如果有不足之处，还请批评指正。"></a>本人的第一篇博客，感谢您阅读到了最后，文中如果有不足之处，还请批评指正。</h6>]]></content>
      
        
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
